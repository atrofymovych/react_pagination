{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","firstPage","lastPage","className","cn","disabled","href","onClick","map","page","active","handlePage","options","items","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","startItemIndex","Number","endItemIndex","min","currentItems","slice","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAoBjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA1BW,WACZN,GACHL,EAAaD,EAAc,IAmBzB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASd,IAFhD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA7BA,SAACE,GACdA,IAASd,GACXC,EAAaa,GA2BQE,CAAWF,IAJ5B,SAMGA,KATEA,MAcT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAhDY,WACbL,GACHN,EAAaD,EAAc,IAyCzB,wBCjEFiB,EAAU,CAAC,EAAG,EAAG,GAAI,IAErBC,EAAQ3B,EAAW,EAJF,IAKpBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPwB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBuB,EAApB,KAOIC,GAAmBxB,EAAc,GAAKyB,OAAOJ,GAAiB,EAC5DK,EAAevB,KAAKwB,IACxB3B,EAAcyB,OAAOJ,GAlBF,IAsBfO,EAAeV,EAAMW,MAAML,EAAiB,EAAGE,GAMrD,OAJoB,IAAhB1B,IACFwB,EAAiB,GAIjB,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCwB,EADjC,cACqDE,EADrD,eAhCiB,GAgCjB,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOV,EACPW,SAhCgB,SAACC,GACzBX,GAAiBW,EAAMC,OAAOH,OAC9BR,EAAe,IAyBT,SAOGN,EAAQJ,KAAI,SAAAsB,GACX,OACE,wBAEEJ,MAAOI,EAFT,SAIGA,GAHIA,UAUf,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAhEe,GAiEfC,QAASsB,EACTrB,YAAaA,EACbC,aAAcsB,IAGhB,6BACGK,EAAaf,KAAI,SAAAwB,GAChB,OACE,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC5EnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bc77cf20.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === totalPages;\n\n  const handleLeft = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleRight = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={handleLeft}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', { active: page === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: lastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={handleRight}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst TOTAL_OF_ITEMS = 42;\n\nconst options = [3, 5, 10, 20];\n\nconst items = getNumbers(1, TOTAL_OF_ITEMS)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  let startItemIndex = ((currentPage - 1) * Number(itemsPerPage)) + 1;\n  const endItemIndex = Math.min(\n    currentPage * Number(itemsPerPage),\n    TOTAL_OF_ITEMS,\n  );\n\n  const currentItems = items.slice(startItemIndex - 1, endItemIndex);\n\n  if (currentPage === 1) {\n    startItemIndex = 1;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItemIndex} - ${endItemIndex} of ${TOTAL_OF_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleQueryChange}\n          >\n            {options.map(option => {\n              return (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL_OF_ITEMS}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map(item => {\n          return (\n            <li\n              key={item}\n              data-cy=\"item\"\n            >\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}